{
    "openapi": "3.1.0",
    "info": {
      "title": "Spotflow Backend",
      "description": "Backend API for Spotflow",
      "version": "0.1.0"
    },
    "paths": {
      "/v1/workflows": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Workflows Public",
          "operationId": "get_workflows_public",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Query"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Status"
              }
            },
            {
              "name": "order_by",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "last_updated_at",
                "title": "Order By"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "desc",
                "title": "Sort"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_WorkflowWithTriggers_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Create Workflow Public",
          "operationId": "create_workflow_public",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWorkflowRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/workflows/{workflow_id}": {
        "patch": {
          "tags": [
            "V1"
          ],
          "summary": "Update Workflow Public",
          "operationId": "update_workflow_public",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "workflow_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Workflow Id"
              }
            },
            {
              "name": "force",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false,
                "title": "Force"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkflowRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Workflow Public",
          "operationId": "get_workflow_public",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "workflow_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Workflow Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkflowWithTriggers"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/workflows/{workflow_id}/runs": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Create Run With Api Key",
          "operationId": "create_run_with_api_key",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "workflow_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Workflow Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRunRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplifiedRun"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Runs Public",
          "operationId": "get_runs_public",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "workflow_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Workflow Id"
              }
            },
            {
              "name": "order_by",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "created_at",
                "title": "Order By"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "desc",
                "title": "Sort"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_SimplifiedRun_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/workflows/{workflow_id}/runs/{run_id}": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Public Get Run By Id And Workflow",
          "operationId": "public_get_run_by_id_and_workflow",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "workflow_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Workflow Id"
              }
            },
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Run Id"
              }
            },
            {
              "name": "output_only",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false,
                "title": "Output Only"
              }
            },
            {
              "name": "use_output_ids",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false,
                "title": "Use Output Ids"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/SimplifiedRun"
                      },
                      {
                        "$ref": "#/components/schemas/RunOutputWithStatus"
                      }
                    ],
                    "title": "Response Public Get Run By Id And Workflow"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/workflows/{workflow_id}/runs/sync": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Create Sync Run",
          "operationId": "create_sync_run",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "workflow_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Workflow Id"
              }
            },
            {
              "name": "output_only",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false,
                "title": "Output Only"
              }
            },
            {
              "name": "use_output_ids",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false,
                "title": "Use Output Ids"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRunRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/RunOutput"
                      },
                      {
                        "$ref": "#/components/schemas/SimplifiedRun"
                      }
                    ],
                    "title": "Response Create Sync Run"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/runs": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Public Get Paginated Runs",
          "operationId": "public_get_paginated_runs",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "created_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Created At"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/RunStatus"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Status"
              }
            },
            {
              "name": "source",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Source"
              }
            },
            {
              "name": "order_by",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "created_at",
                "title": "Order By"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "desc",
                "title": "Sort"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_RunNoIO_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/runs/{run_id}": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Public Get Run By Id",
          "operationId": "public_get_run_by_id",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Run Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RunNoIO"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/runs/{run_id}/data": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Public Get Run Data By Id",
          "operationId": "public_get_run_data_by_id",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "run_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Run Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RunData"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/runs/search": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Search Runs Public",
          "operationId": "search_runs_public",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchRunRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_RunWithSearchData_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Add Knowledge Base V2",
          "operationId": "add_knowledge_base_v2",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "Auth0HTTPBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKnowledgeBase"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseV2"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Knowledge Bases V2",
          "operationId": "get_knowledge_bases_v2",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Query"
              }
            },
            {
              "name": "order_by",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "last_updated_at",
                "title": "Order By"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "desc",
                "title": "Sort"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_KnowledgeBaseV2_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Knowledge Base V2",
          "operationId": "get_knowledge_base_v2",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseWithDocuments"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "V1"
          ],
          "summary": "Update Knowledge Base V2",
          "operationId": "update_knowledge_base_v2",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateKnowledgeBase"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseV2"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "V1"
          ],
          "summary": "Delete Knowledge Base V2",
          "operationId": "delete_knowledge_base_v2",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/runs": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Knowledge Base Running Jobs",
          "operationId": "get_knowledge_base_running_jobs",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/RunStatus"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Status"
              }
            },
            {
              "name": "run_ids",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Run Ids"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Run"
                    },
                    "title": "Response Get Knowledge Base Running Jobs"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/document": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Add Knowledge Base Document",
          "operationId": "add_knowledge_base_document",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocument"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocument"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/document/{document_id}": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Knowledge Base Document",
          "operationId": "get_knowledge_base_document",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "document_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Document Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocument"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "V1"
          ],
          "summary": "Delete Knowledge Base Document",
          "operationId": "delete_knowledge_base_document",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "document_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Document Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocument"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "V1"
          ],
          "summary": "Update Knowledge Base Document",
          "operationId": "update_knowledge_base_document",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "document_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Document Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDocument"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocument"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/documents/{status}": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Knowledge Base Documents",
          "operationId": "get_knowledge_base_documents",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "status",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Status"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_KnowledgeBaseDocument_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/retry_all": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Train Knowledge Base",
          "operationId": "train_knowledge_base",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Knowledge Base Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "title": "Response Train Knowledge Base"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/upload_train": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Upload Train Knowledge Base",
          "operationId": "upload_train_knowledge_base",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "prefix",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "The path prefix where to upload",
                "default": "/",
                "title": "Prefix"
              },
              "description": "The path prefix where to upload"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Body_upload_train_knowledge_base"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "title": "Response Upload Train Knowledge Base"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/knowledge-bases/types": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Fetch Knowledge Base Custom Types",
          "operationId": "fetch_knowledge_base_custom_types",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/KnowledgeBaseType"
                    },
                    "type": "array",
                    "title": "Response Fetch Knowledge Base Custom Types"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/knowledge-bases/{knowledge_base_id}/generic_train": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Generic Train Knowledge Base",
          "operationId": "generic_train_knowledge_base",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "knowledge_base_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Knowledge Base Id"
              }
            },
            {
              "name": "prefix",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "The path prefix where to upload",
                "default": "/",
                "title": "Prefix"
              },
              "description": "The path prefix where to upload"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "title": "Response Generic Train Knowledge Base"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/conversations": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "List Conversations",
          "operationId": "list_conversations",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "order_by",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "last_updated_at",
                "title": "Order By"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "desc",
                "title": "Sort"
              }
            },
            {
              "name": "assistant_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Assistant Id"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_Conversation_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Create Conversation",
          "operationId": "create_conversation",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "assistant_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Assistant Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConversation"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConversationWithMessages"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/conversations/{conversation_id}": {
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Conversation",
          "operationId": "get_conversation",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "conversation_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Conversation Id"
              }
            },
            {
              "name": "assistant_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Assistant Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConversationWithMessages"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Add Message",
          "operationId": "add_message",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "conversation_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Conversation Id"
              }
            },
            {
              "name": "assistant_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Assistant Id"
              }
            },
            {
              "name": "message_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Message Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMessageRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConversationWithMessages"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "V1"
          ],
          "summary": "Delete Conversation",
          "operationId": "delete_conversation",
          "security": [
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "conversation_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Conversation Id"
              }
            },
            {
              "name": "assistant_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Assistant Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/conversations/{conversation_id}/messages/{message_id}/refresh": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Refresh Message",
          "operationId": "refresh_message",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "conversation_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid",
                "title": "Conversation Id"
              }
            },
            {
              "name": "message_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Message Id"
              }
            },
            {
              "name": "assistant_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "uuid"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Assistant Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConversationWithMessages"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Add Assistant",
          "operationId": "add_assistant",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAssistant"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Assistants",
          "operationId": "get_assistants",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Query"
              }
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Status"
              }
            },
            {
              "name": "order_by",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "last_updated_at",
                "title": "Order By"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "default": "desc",
                "title": "Sort"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "description": "Page number",
                "default": 1,
                "title": "Page"
              },
              "description": "Page number"
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "minimum": 1,
                "description": "Page size",
                "default": 50,
                "title": "Size"
              },
              "description": "Page size"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Page_Assistant_"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}": {
        "patch": {
          "tags": [
            "V1"
          ],
          "summary": "Update Assistant",
          "operationId": "update_assistant",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAssistant"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "V1"
          ],
          "summary": "Get Assistant",
          "operationId": "get_assistant",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "V1"
          ],
          "summary": "Delete Assistant",
          "operationId": "delete_assistant",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/duplicate": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Duplicate Assistant",
          "operationId": "duplicate_assistant",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/agents/{agent_id}/restore": {
        "post": {
          "tags": [
            "V1"
          ],
          "summary": "Restore Assistant",
          "operationId": "restore_assistant",
          "security": [
            {
              "Auth0HTTPBearer": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Agent Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Status"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AddMessageRequest": {
          "properties": {
            "content": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content"
            },
            "tool": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "web_research",
                    "kb_qa"
                  ]
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tool"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id"
            },
            "files": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/ConversationFile"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Files"
            },
            "model_selection": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Selection"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "AddMessageRequest"
        },
        "Assistant": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "definition": {
              "type": "object",
              "title": "Definition"
            },
            "visible": {
              "type": "boolean",
              "title": "Visible",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "name",
            "definition"
          ],
          "title": "Assistant"
        },
        "AudioReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id"
            },
            "doc_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Id"
            },
            "file_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            },
            "from_timestamp": {
              "type": "string",
              "format": "duration",
              "title": "From Timestamp"
            },
            "to_timestamp": {
              "type": "string",
              "format": "duration",
              "title": "To Timestamp"
            },
            "type": {
              "type": "string",
              "const": "audio",
              "title": "Type",
              "default": "audio"
            }
          },
          "type": "object",
          "required": [
            "from_timestamp",
            "to_timestamp"
          ],
          "title": "AudioReferenceMessage"
        },
        "Body_upload_train_knowledge_base": {
          "properties": {
            "files": {
              "items": {
                "type": "string",
                "format": "binary"
              },
              "type": "array",
              "title": "Files"
            }
          },
          "type": "object",
          "required": [
            "files"
          ],
          "title": "Body_upload_train_knowledge_base"
        },
        "Conversation": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "last_updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Last Updated At"
            },
            "etag": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Etag"
            },
            "settings": {
              "$ref": "#/components/schemas/ConversationSettings-Output"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name",
            "created_at",
            "last_updated_at",
            "etag",
            "settings"
          ],
          "title": "Conversation"
        },
        "ConversationFile": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            },
            "type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "success",
                "error"
              ],
              "title": "Status"
            },
            "url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Url"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name",
            "size",
            "type",
            "status",
            "url"
          ],
          "title": "ConversationFile"
        },
        "ConversationSettings-Input": {
          "properties": {
            "model_selection": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Model Selection",
              "description": "The models to use for the conversation"
            },
            "temperature": {
              "type": "number",
              "title": "Temperature",
              "description": "The temperature to use for the conversation",
              "default": 0.4
            },
            "max_tokens": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Tokens",
              "description": "The maximum number of tokens to use for the conversation"
            },
            "tools": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WebResearchSettings"
                  },
                  {
                    "$ref": "#/components/schemas/NoxusQaSettings"
                  },
                  {
                    "$ref": "#/components/schemas/KnowledgeBaseSelectorSettings"
                  },
                  {
                    "$ref": "#/components/schemas/KnowledgeBaseQaSettings"
                  },
                  {
                    "$ref": "#/components/schemas/WorkflowSettings"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "kb_qa": "#/components/schemas/KnowledgeBaseQaSettings",
                    "kb_selector": "#/components/schemas/KnowledgeBaseSelectorSettings",
                    "noxus_qa": "#/components/schemas/NoxusQaSettings",
                    "web_research": "#/components/schemas/WebResearchSettings",
                    "workflow": "#/components/schemas/WorkflowSettings"
                  }
                }
              },
              "type": "array",
              "title": "Tools",
              "description": "The tools to use for the conversation",
              "default": [
                {
                  "name": "Web Research",
                  "description": "Search the web for information",
                  "enabled": true,
                  "type": "web_research"
                },
                {
                  "name": "Noxus Q&A",
                  "description": "Answer questions about the Noxus platform",
                  "enabled": true,
                  "type": "noxus_qa"
                },
                {
                  "name": "Select Knowledge Base Q&A",
                  "description": "Select a knowledge base to answer questions about",
                  "enabled": true,
                  "type": "kb_selector"
                }
              ]
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions",
              "description": "Extra instructions to use for the conversation"
            }
          },
          "type": "object",
          "title": "ConversationSettings"
        },
        "ConversationSettings-Output": {
          "properties": {
            "model_selection": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Model Selection",
              "description": "The models to use for the conversation"
            },
            "temperature": {
              "type": "number",
              "title": "Temperature",
              "description": "The temperature to use for the conversation",
              "default": 0.4
            },
            "max_tokens": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Tokens",
              "description": "The maximum number of tokens to use for the conversation"
            },
            "tools": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WebResearchSettings"
                  },
                  {
                    "$ref": "#/components/schemas/NoxusQaSettings"
                  },
                  {
                    "$ref": "#/components/schemas/KnowledgeBaseSelectorSettings"
                  },
                  {
                    "$ref": "#/components/schemas/KnowledgeBaseQaSettings"
                  },
                  {
                    "$ref": "#/components/schemas/WorkflowSettings"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "kb_qa": "#/components/schemas/KnowledgeBaseQaSettings",
                    "kb_selector": "#/components/schemas/KnowledgeBaseSelectorSettings",
                    "noxus_qa": "#/components/schemas/NoxusQaSettings",
                    "web_research": "#/components/schemas/WebResearchSettings",
                    "workflow": "#/components/schemas/WorkflowSettings"
                  }
                }
              },
              "type": "array",
              "title": "Tools",
              "description": "The tools to use for the conversation",
              "default": [
                {
                  "name": "Web Research",
                  "description": "Search the web for information",
                  "enabled": true,
                  "type": "web_research"
                },
                {
                  "name": "Noxus Q&A",
                  "description": "Answer questions about the Noxus platform",
                  "enabled": true,
                  "type": "noxus_qa"
                },
                {
                  "name": "Select Knowledge Base Q&A",
                  "description": "Select a knowledge base to answer questions about",
                  "enabled": true,
                  "type": "kb_selector"
                }
              ]
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions",
              "description": "Extra instructions to use for the conversation"
            }
          },
          "type": "object",
          "title": "ConversationSettings"
        },
        "ConversationWithMessages": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "last_updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Last Updated At"
            },
            "etag": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Etag"
            },
            "settings": {
              "$ref": "#/components/schemas/ConversationSettings-Output"
            },
            "messages": {
              "items": {
                "$ref": "#/components/schemas/Message"
              },
              "type": "array",
              "title": "Messages"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name",
            "created_at",
            "last_updated_at",
            "etag",
            "settings",
            "messages"
          ],
          "title": "ConversationWithMessages"
        },
        "CreateAssistant": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "definition": {
              "$ref": "#/components/schemas/ConversationSettings-Input",
              "default": {
                "model_selection": [
                  "chat-balanced",
                  "gemini-2.0-pro",
                  "claude-3.5-sonnet-v2",
                  "claude-3.7-sonnet",
                  "gpt-4o"
                ],
                "temperature": 0.4,
                "tools": [
                  {
                    "description": "Search the web for information",
                    "enabled": true,
                    "name": "Web Research",
                    "type": "web_research"
                  },
                  {
                    "description": "Answer questions about the Noxus platform",
                    "enabled": true,
                    "name": "Noxus Q&A",
                    "type": "noxus_qa"
                  },
                  {
                    "description": "Select a knowledge base to answer questions about",
                    "enabled": true,
                    "name": "Select Knowledge Base Q&A",
                    "type": "kb_selector"
                  }
                ]
              }
            },
            "visible": {
              "type": "boolean",
              "title": "Visible",
              "default": true
            },
            "author_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Name"
            }
          },
          "type": "object",
          "required": [
            "name"
          ],
          "title": "CreateAssistant"
        },
        "CreateConversation": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          "type": "object",
          "title": "CreateConversation"
        },
        "CreateDocument": {
          "properties": {
            "status": {
              "$ref": "#/components/schemas/DocumentStatus"
            },
            "prefix": {
              "type": "string",
              "title": "Prefix",
              "default": "/"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "doc_metadata": {
              "type": "object",
              "title": "Doc Metadata",
              "default": {}
            },
            "run_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run Id"
            }
          },
          "type": "object",
          "required": [
            "status",
            "name"
          ],
          "title": "CreateDocument"
        },
        "CreateKnowledgeBase": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "document_types": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Document Types",
              "default": []
            },
            "status": {
              "$ref": "#/components/schemas/TrainStatus",
              "default": "created"
            },
            "kb_type": {
              "$ref": "#/components/schemas/KBType",
              "default": "temporary"
            },
            "workflow_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Id"
            },
            "node_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Id"
            },
            "settings_": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KnowledgeBaseSettings-Input"
                },
                {
                  "type": "null"
                }
              ],
              "default": {
                "allowed_sources": [
                  "Document",
                  "Google Drive",
                  "OneDrive",
                  "Website"
                ],
                "ingestion": {
                  "batch_size": 8,
                  "default_chunk_overlap": 256,
                  "default_chunk_size": 1024,
                  "enrich_chunks_mode": "inject_summary",
                  "enrich_pre_made_qa": false,
                  "methods": {
                    "application/pdf": {
                      "chunk_overlap": 256,
                      "chunk_size": 1024,
                      "enrich_chunks_mode": "inject_summary",
                      "extract_images": true,
                      "extract_qa_pairs": false,
                      "supported_mime_types": [
                        "application/pdf",
                        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                        "application/msword",
                        "application/vnd.ms-powerpoint"
                      ],
                      "type": "pdf"
                    },
                    "default": {
                      "chunk_size": 1024,
                      "chunk_overlap": 256,
                      "enrich_chunks_mode": "inject_summary",
                      "extract_qa_pairs": false,
                      "type": "default",
                      "supported_mime_types": [
                        "text/plain",
                        "text/html",
                        "text/markdown",
                        "application/json"
                      ]
                    },
                    "image/*": {
                      "supported_mime_types": [
                        "image/jpeg",
                        "image/png",
                        "image/bmp"
                      ],
                      "type": "image"
                    },
                    "text/html": {
                      "chunk_overlap": 256,
                      "chunk_size": 1024,
                      "enrich_chunks_mode": "inject_summary",
                      "extract_qa_pairs": false,
                      "extract_text_only": true,
                      "include_images": false,
                      "include_tables": true,
                      "supported_mime_types": [
                        "text/html"
                      ],
                      "type": "html"
                    },
                    "text/plain": {
                      "chunk_overlap": 256,
                      "chunk_size": 1024,
                      "chunking": true,
                      "enrich_chunks_mode": "inject_summary",
                      "extract_qa_pairs": false,
                      "preserve_formatting": true,
                      "supported_mime_types": [
                        "text/plain",
                        "text/html",
                        "text/markdown",
                        "application/json"
                      ],
                      "type": "text"
                    }
                  }
                },
                "retrieval": {
                  "hybrid_settings": {
                    "fts_weight": 0.7,
                    "full_text_search": {
                      "type": "full_text_search"
                    },
                    "semantic_search": {
                      "sets_threshold": false,
                      "threshold": 0.0,
                      "top_k": 25,
                      "type": "semantic"
                    },
                    "semantic_weight": 0.3,
                    "threshold": 0.0,
                    "type": "hybrid_relative_score"
                  },
                  "reranker_settings": {
                    "model_name": "semantic-ranker-512@latest",
                    "ranking_config": "default_ranking_config",
                    "sets_threshold": false,
                    "threshold": 0.0,
                    "top_k": 10,
                    "type": "vertex"
                  },
                  "type": "hybrid_reranking"
                },
                "embeddings": {
                  "mm_model": "vertexai/multimodalembedding@001",
                  "text_model": "vertexai/text-multilingual-embedding-002"
                }
              }
            }
          },
          "type": "object",
          "required": [
            "name",
            "description"
          ],
          "title": "CreateKnowledgeBase"
        },
        "CreateRunRequest": {
          "properties": {
            "input": {
              "type": "object",
              "title": "Input"
            },
            "node_ids": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Ids"
            },
            "group_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Group Id"
            }
          },
          "type": "object",
          "required": [
            "input"
          ],
          "title": "CreateRunRequest"
        },
        "CreateWorkflowRequest": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/WorkflowType"
            },
            "definition": {
              "type": "object",
              "title": "Definition"
            },
            "error_handler": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Handler"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowMeta"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "name",
            "type",
            "definition"
          ],
          "title": "CreateWorkflowRequest"
        },
        "CustomSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "const": "Custom",
              "title": "Source Type",
              "default": "Custom"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config_cls": {
              "title": "Config Cls"
            },
            "config": {
              "$ref": "#/components/schemas/CustomSourceConfig"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration"
            },
            "image": {
              "type": "string",
              "title": "Image",
              "default": "icon:Globe"
            },
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Custom"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "CustomSource"
        },
        "CustomSourceConfig": {
          "properties": {},
          "additionalProperties": true,
          "type": "object",
          "title": "CustomSourceConfig"
        },
        "DefaultIngestionMethod": {
          "properties": {
            "chunk_size": {
              "type": "integer",
              "title": "Chunk Size",
              "default": 1024
            },
            "chunk_overlap": {
              "type": "integer",
              "title": "Chunk Overlap",
              "default": 256
            },
            "enrich_chunks_mode": {
              "type": "string",
              "enum": [
                "inject_summary",
                "contextual"
              ],
              "title": "Enrich Chunks Mode",
              "default": "inject_summary"
            },
            "extract_qa_pairs": {
              "type": "boolean",
              "title": "Extract Qa Pairs",
              "default": false
            },
            "type": {
              "type": "string",
              "const": "default",
              "title": "Type",
              "default": "default"
            },
            "supported_mime_types": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Supported Mime Types",
              "default": [
                "text/plain",
                "text/html",
                "text/markdown",
                "application/json"
              ]
            }
          },
          "type": "object",
          "title": "DefaultIngestionMethod"
        },
        "DocumentReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id"
            },
            "doc_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Id"
            },
            "file_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            },
            "type": {
              "type": "string",
              "const": "document",
              "title": "Type",
              "default": "document"
            },
            "quote": {
              "type": "string",
              "title": "Quote"
            },
            "page_label": {
              "type": "string",
              "title": "Page Label"
            },
            "ref_num": {
              "type": "integer",
              "title": "Ref Num"
            },
            "content_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Type"
            }
          },
          "type": "object",
          "required": [
            "quote",
            "page_label",
            "ref_num"
          ],
          "title": "DocumentReferenceMessage"
        },
        "DocumentSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "const": "Document",
              "title": "Source Type",
              "default": "Document"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config_cls": {
              "title": "Config Cls"
            },
            "config": {
              "$ref": "#/components/schemas/DocumentSourceConfig"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration"
            },
            "image": {
              "type": "string",
              "title": "Image",
              "default": ""
            },
            "name": {
              "type": "string",
              "title": "Name",
              "default": "File"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "DocumentSource"
        },
        "DocumentSourceConfig": {
          "properties": {
            "files": {
              "items": {
                "$ref": "#/components/schemas/File"
              },
              "type": "array",
              "title": "Files",
              "display": {
                "col_span": 12,
                "is_disabled": false,
                "is_subconfig": false,
                "label": "Files",
                "type": "file_array"
              }
            }
          },
          "type": "object",
          "title": "DocumentSourceConfig"
        },
        "DocumentStatus": {
          "type": "string",
          "enum": [
            "trained",
            "training",
            "error",
            "uploaded",
            "folder"
          ],
          "title": "DocumentStatus"
        },
        "EdgeProgress": {
          "properties": {
            "status": {
              "$ref": "#/components/schemas/EdgeStatus",
              "default": "pending"
            }
          },
          "type": "object",
          "title": "EdgeProgress"
        },
        "EdgeStatus": {
          "type": "string",
          "enum": [
            "pending",
            "active",
            "skipped",
            "completed"
          ],
          "title": "EdgeStatus"
        },
        "EmbeddingsSettings": {
          "properties": {
            "text_model": {
              "type": "string",
              "const": "vertexai/text-multilingual-embedding-002",
              "title": "Text Model",
              "default": "vertexai/text-multilingual-embedding-002"
            },
            "mm_model": {
              "type": "string",
              "const": "vertexai/multimodalembedding@001",
              "title": "Mm Model",
              "default": "vertexai/multimodalembedding@001"
            }
          },
          "type": "object",
          "title": "EmbeddingsSettings"
        },
        "ErrorMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "content": {
              "type": "string",
              "title": "Content"
            },
            "show_to_user": {
              "type": "boolean",
              "title": "Show To User",
              "default": true
            },
            "type": {
              "type": "string",
              "const": "error",
              "title": "Type",
              "default": "error"
            },
            "error_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "ErrorMessage"
        },
        "File": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "uri": {
              "type": "string",
              "title": "Uri"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "content_type": {
              "type": "string",
              "title": "Content Type",
              "default": "text/plain"
            },
            "source_type": {
              "$ref": "#/components/schemas/SourceType",
              "default": "Document"
            },
            "source_metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Metadata"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "required": [
            "uri",
            "name"
          ],
          "title": "File"
        },
        "FullTextSearchMethod": {
          "properties": {
            "type": {
              "type": "string",
              "const": "full_text_search",
              "title": "Type",
              "default": "full_text_search"
            }
          },
          "type": "object",
          "title": "FullTextSearchMethod"
        },
        "FunctionCallData": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "arguments": {
              "type": "object",
              "title": "Arguments"
            }
          },
          "type": "object",
          "required": [
            "name",
            "arguments"
          ],
          "title": "FunctionCallData"
        },
        "GoogleDriveSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "const": "Google Drive",
              "title": "Source Type",
              "default": "Google Drive"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config_cls": {
              "title": "Config Cls"
            },
            "config": {
              "$ref": "#/components/schemas/GoogleDriveSourceConfig"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration",
              "default": "gdrive"
            },
            "image": {
              "type": "string",
              "title": "Image",
              "default": "https://storage.googleapis.com/image-storage-spot-manual/logos/google-drive.svg"
            },
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Google Drive"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "GoogleDriveSource"
        },
        "GoogleDriveSourceConfig": {
          "properties": {
            "text_display_1": {
              "type": "string",
              "title": "Text Display 1",
              "default": "",
              "display": {
                "col_span": 12,
                "is_disabled": false,
                "is_subconfig": false,
                "label": "",
                "text": "",
                "title": "Select files to add to knowledge base",
                "type": "ui_text_display"
              }
            },
            "files": {
              "items": {
                "$ref": "#/components/schemas/GoogleFile"
              },
              "type": "array",
              "title": "Files",
              "description": "File or folder to read",
              "display": {
                "col_span": 12,
                "file_type": "application/pdf,text/plain,application/vnd.google-apps.document,application/vnd.google-apps.presentation,application/json,application/vnd.google-apps.folder,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.openxmlformats-officedocument.presentationml.presentation",
                "is_disabled": false,
                "is_subconfig": false,
                "label": "Path(s)",
                "multi_select": true,
                "setIncludeFolders": false,
                "type": "gdrive_picker"
              },
              "placeholder": {
                "id": "123",
                "name": "123"
              }
            }
          },
          "type": "object",
          "required": [
            "files"
          ],
          "title": "GoogleDriveSourceConfig"
        },
        "GoogleFile": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "mime_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Mime Type"
            },
            "image": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Image"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "title": "GoogleFile"
        },
        "HTMLIngestionMethod": {
          "properties": {
            "chunk_size": {
              "type": "integer",
              "maximum": 10240.0,
              "minimum": 1.0,
              "title": "Chunk Size",
              "default": 1024
            },
            "chunk_overlap": {
              "type": "integer",
              "maximum": 1024.0,
              "minimum": 1.0,
              "title": "Chunk Overlap",
              "default": 256
            },
            "enrich_chunks_mode": {
              "type": "string",
              "enum": [
                "inject_summary",
                "contextual"
              ],
              "title": "Enrich Chunks Mode",
              "default": "inject_summary"
            },
            "extract_qa_pairs": {
              "type": "boolean",
              "title": "Extract Qa Pairs",
              "default": false
            },
            "type": {
              "type": "string",
              "const": "html",
              "title": "Type",
              "default": "html"
            },
            "supported_mime_types": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Supported Mime Types",
              "default": [
                "text/html"
              ]
            },
            "extract_text_only": {
              "type": "boolean",
              "title": "Extract Text Only",
              "default": true
            },
            "include_tables": {
              "type": "boolean",
              "title": "Include Tables",
              "default": true
            },
            "include_images": {
              "type": "boolean",
              "title": "Include Images",
              "default": false
            }
          },
          "type": "object",
          "title": "HTMLIngestionMethod"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "HybridRerankingSettings-Input": {
          "properties": {
            "type": {
              "type": "string",
              "const": "hybrid_reranking",
              "title": "Type",
              "default": "hybrid_reranking"
            },
            "hybrid_settings": {
              "$ref": "#/components/schemas/HybridSearchMethod",
              "default": {
                "type": "hybrid_relative_score",
                "threshold": 0.0,
                "fts_weight": 0.7,
                "semantic_weight": 0.3,
                "full_text_search": {
                  "type": "full_text_search"
                },
                "semantic_search": {
                  "sets_threshold": false,
                  "threshold": 0.0,
                  "top_k": 25,
                  "type": "semantic"
                }
              }
            },
            "reranker_settings": {
              "$ref": "#/components/schemas/VertexRerankingOpts",
              "default": {
                "type": "vertex",
                "model_name": "semantic-ranker-512@latest",
                "ranking_config": "default_ranking_config",
                "top_k": 10,
                "sets_threshold": false,
                "threshold": 0.0
              }
            }
          },
          "type": "object",
          "title": "HybridRerankingSettings"
        },
        "HybridRerankingSettings-Output": {
          "properties": {
            "type": {
              "type": "string",
              "const": "hybrid_reranking",
              "title": "Type",
              "default": "hybrid_reranking"
            },
            "hybrid_settings": {
              "$ref": "#/components/schemas/HybridSearchMethod",
              "default": {
                "type": "hybrid_relative_score",
                "threshold": 0.0,
                "fts_weight": 0.7,
                "semantic_weight": 0.3,
                "full_text_search": {
                  "type": "full_text_search"
                },
                "semantic_search": {
                  "sets_threshold": false,
                  "threshold": 0.0,
                  "top_k": 25,
                  "type": "semantic"
                }
              }
            },
            "reranker_settings": {
              "$ref": "#/components/schemas/VertexRerankingOpts",
              "default": {
                "type": "vertex",
                "model_name": "semantic-ranker-512@latest",
                "ranking_config": "default_ranking_config",
                "top_k": 10,
                "sets_threshold": false,
                "threshold": 0.0
              }
            }
          },
          "type": "object",
          "title": "HybridRerankingSettings"
        },
        "HybridSearchMethod": {
          "properties": {
            "type": {
              "type": "string",
              "const": "hybrid_relative_score",
              "title": "Type",
              "default": "hybrid_relative_score"
            },
            "threshold": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Threshold",
              "default": 0.0
            },
            "fts_weight": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "title": "Fts Weight",
              "default": 0.7
            },
            "semantic_weight": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "title": "Semantic Weight",
              "default": 0.3
            },
            "full_text_search": {
              "$ref": "#/components/schemas/FullTextSearchMethod",
              "default": {
                "type": "full_text_search"
              }
            },
            "semantic_search": {
              "$ref": "#/components/schemas/SemanticSearchMethod",
              "default": {
                "type": "semantic",
                "sets_threshold": false,
                "threshold": 0.0,
                "top_k": 25
              }
            }
          },
          "type": "object",
          "title": "HybridSearchMethod"
        },
        "ImageIngestionMethod": {
          "properties": {
            "type": {
              "type": "string",
              "const": "image",
              "title": "Type",
              "default": "image"
            },
            "supported_mime_types": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Supported Mime Types",
              "default": [
                "image/jpeg",
                "image/png",
                "image/bmp"
              ]
            },
            "ocr_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OCRSettings"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "title": "ImageIngestionMethod"
        },
        "ImageReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id"
            },
            "doc_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Id"
            },
            "file_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            },
            "type": {
              "type": "string",
              "const": "image",
              "title": "Type",
              "default": "image"
            }
          },
          "type": "object",
          "title": "ImageReferenceMessage"
        },
        "InfoMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "content": {
              "type": "string",
              "title": "Content"
            },
            "show_to_user": {
              "type": "boolean",
              "title": "Show To User",
              "default": true
            },
            "type": {
              "type": "string",
              "const": "info",
              "title": "Type",
              "default": "info"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "InfoMessage"
        },
        "IngestionSettings-Input": {
          "properties": {
            "batch_size": {
              "type": "integer",
              "maximum": 128.0,
              "minimum": 1.0,
              "title": "Batch Size",
              "default": 8
            },
            "default_chunk_size": {
              "type": "integer",
              "maximum": 4096.0,
              "minimum": 1.0,
              "title": "Default Chunk Size",
              "default": 1024
            },
            "default_chunk_overlap": {
              "type": "integer",
              "maximum": 1024.0,
              "minimum": 1.0,
              "title": "Default Chunk Overlap",
              "default": 256
            },
            "enrich_chunks_mode": {
              "type": "string",
              "enum": [
                "inject_summary",
                "contextual"
              ],
              "title": "Enrich Chunks Mode",
              "default": "inject_summary"
            },
            "enrich_pre_made_qa": {
              "type": "boolean",
              "title": "Enrich Pre Made Qa",
              "default": false
            },
            "methods": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DefaultIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/PDFIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/ImageIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/HTMLIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/TextIngestionMethod"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "default": "#/components/schemas/DefaultIngestionMethod",
                    "html": "#/components/schemas/HTMLIngestionMethod",
                    "image": "#/components/schemas/ImageIngestionMethod",
                    "pdf": "#/components/schemas/PDFIngestionMethod",
                    "text": "#/components/schemas/TextIngestionMethod"
                  }
                }
              },
              "type": "object",
              "title": "Methods",
              "default": {
                "application/pdf": {
                  "chunk_overlap": 256,
                  "chunk_size": 1024,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_images": true,
                  "extract_qa_pairs": false,
                  "supported_mime_types": [
                    "application/pdf",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "application/msword",
                    "application/vnd.ms-powerpoint"
                  ],
                  "type": "pdf"
                },
                "image/*": {
                  "supported_mime_types": [
                    "image/jpeg",
                    "image/png",
                    "image/bmp"
                  ],
                  "type": "image"
                },
                "text/html": {
                  "chunk_overlap": 256,
                  "chunk_size": 1024,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_qa_pairs": false,
                  "extract_text_only": true,
                  "include_images": false,
                  "include_tables": true,
                  "supported_mime_types": [
                    "text/html"
                  ],
                  "type": "html"
                },
                "text/plain": {
                  "chunk_overlap": 256,
                  "chunk_size": 1024,
                  "chunking": true,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_qa_pairs": false,
                  "preserve_formatting": true,
                  "supported_mime_types": [
                    "text/plain",
                    "text/html",
                    "text/markdown",
                    "application/json"
                  ],
                  "type": "text"
                },
                "default": {
                  "chunk_size": 1024,
                  "chunk_overlap": 256,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_qa_pairs": false,
                  "type": "default",
                  "supported_mime_types": [
                    "text/plain",
                    "text/html",
                    "text/markdown",
                    "application/json"
                  ]
                }
              }
            }
          },
          "type": "object",
          "title": "IngestionSettings"
        },
        "IngestionSettings-Output": {
          "properties": {
            "batch_size": {
              "type": "integer",
              "maximum": 128.0,
              "minimum": 1.0,
              "title": "Batch Size",
              "default": 8
            },
            "default_chunk_size": {
              "type": "integer",
              "maximum": 4096.0,
              "minimum": 1.0,
              "title": "Default Chunk Size",
              "default": 1024
            },
            "default_chunk_overlap": {
              "type": "integer",
              "maximum": 1024.0,
              "minimum": 1.0,
              "title": "Default Chunk Overlap",
              "default": 256
            },
            "enrich_chunks_mode": {
              "type": "string",
              "enum": [
                "inject_summary",
                "contextual"
              ],
              "title": "Enrich Chunks Mode",
              "default": "inject_summary"
            },
            "enrich_pre_made_qa": {
              "type": "boolean",
              "title": "Enrich Pre Made Qa",
              "default": false
            },
            "methods": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DefaultIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/PDFIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/ImageIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/HTMLIngestionMethod"
                  },
                  {
                    "$ref": "#/components/schemas/TextIngestionMethod"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "default": "#/components/schemas/DefaultIngestionMethod",
                    "html": "#/components/schemas/HTMLIngestionMethod",
                    "image": "#/components/schemas/ImageIngestionMethod",
                    "pdf": "#/components/schemas/PDFIngestionMethod",
                    "text": "#/components/schemas/TextIngestionMethod"
                  }
                }
              },
              "type": "object",
              "title": "Methods",
              "default": {
                "application/pdf": {
                  "chunk_overlap": 256,
                  "chunk_size": 1024,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_images": true,
                  "extract_qa_pairs": false,
                  "supported_mime_types": [
                    "application/pdf",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "application/msword",
                    "application/vnd.ms-powerpoint"
                  ],
                  "type": "pdf"
                },
                "image/*": {
                  "supported_mime_types": [
                    "image/jpeg",
                    "image/png",
                    "image/bmp"
                  ],
                  "type": "image"
                },
                "text/html": {
                  "chunk_overlap": 256,
                  "chunk_size": 1024,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_qa_pairs": false,
                  "extract_text_only": true,
                  "include_images": false,
                  "include_tables": true,
                  "supported_mime_types": [
                    "text/html"
                  ],
                  "type": "html"
                },
                "text/plain": {
                  "chunk_overlap": 256,
                  "chunk_size": 1024,
                  "chunking": true,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_qa_pairs": false,
                  "preserve_formatting": true,
                  "supported_mime_types": [
                    "text/plain",
                    "text/html",
                    "text/markdown",
                    "application/json"
                  ],
                  "type": "text"
                },
                "default": {
                  "chunk_size": 1024,
                  "chunk_overlap": 256,
                  "enrich_chunks_mode": "inject_summary",
                  "extract_qa_pairs": false,
                  "type": "default",
                  "supported_mime_types": [
                    "text/plain",
                    "text/html",
                    "text/markdown",
                    "application/json"
                  ]
                }
              }
            }
          },
          "type": "object",
          "title": "IngestionSettings"
        },
        "InternalToolResultMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "function"
            },
            "tool_type": {
              "type": "string",
              "enum": [
                "kb_qa",
                "web_research",
                "workflow",
                "list_workflows",
                "run_integration",
                "noxus_qa"
              ],
              "title": "Tool Type"
            },
            "type": {
              "type": "string",
              "const": "tool_result",
              "title": "Type",
              "default": "tool_result"
            },
            "content": {
              "type": "string",
              "title": "Content"
            }
          },
          "type": "object",
          "required": [
            "tool_type",
            "content"
          ],
          "title": "InternalToolResultMessage"
        },
        "KBType": {
          "type": "string",
          "enum": [
            "temporary",
            "entity"
          ],
          "title": "KBType"
        },
        "KnowledgeBaseDocument": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "summary": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Summary"
            },
            "short_summary": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Short Summary"
            },
            "doc_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Type"
            },
            "source_type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SourceType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "source_metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Metadata"
            },
            "content_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Type"
            },
            "has_conversion": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Conversion"
            },
            "status": {
              "$ref": "#/components/schemas/DocumentStatus"
            },
            "doc_metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Metadata"
            },
            "error": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "prefix": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            },
            "uri": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Uri"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "size": {
              "type": "integer",
              "title": "Size"
            },
            "file_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            }
          },
          "type": "object",
          "required": [
            "id",
            "summary",
            "status",
            "error",
            "updated_at",
            "created_at",
            "size"
          ],
          "title": "KnowledgeBaseDocument"
        },
        "KnowledgeBaseInfo": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "summary": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Summary"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "title": "KnowledgeBaseInfo"
        },
        "KnowledgeBaseQaSettings": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Knowledge Base Q&A"
            },
            "description": {
              "type": "string",
              "title": "Description",
              "default": "Answer questions about the knowledge base"
            },
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "default": true
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions"
            },
            "type": {
              "type": "string",
              "const": "kb_qa",
              "title": "Type",
              "default": "kb_qa"
            },
            "knowledge_base": {
              "$ref": "#/components/schemas/KnowledgeBaseInfo"
            }
          },
          "type": "object",
          "required": [
            "knowledge_base"
          ],
          "title": "KnowledgeBaseQaSettings",
          "description": "Tool that allows the user to answer questions about a specific pre-selected knowledge base"
        },
        "KnowledgeBaseSelectorSettings": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Select Knowledge Base Q&A"
            },
            "description": {
              "type": "string",
              "title": "Description",
              "default": "Select a knowledge base to answer questions about"
            },
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "default": true
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions"
            },
            "type": {
              "type": "string",
              "const": "kb_selector",
              "title": "Type",
              "default": "kb_selector"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id",
              "description": "The ID of the knowledge base to answer questions about. Comes unselected, and should be selected by the user."
            },
            "knowledge_base": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KnowledgeBaseInfo"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The knowledge base to answer questions about. Comes unselected, and should be selected by the user."
            }
          },
          "type": "object",
          "title": "KnowledgeBaseSelectorSettings",
          "description": "Tool that allows the user to select a knowledge base to answer questions about"
        },
        "KnowledgeBaseSettings-Input": {
          "properties": {
            "allowed_sources": {
              "items": {
                "$ref": "#/components/schemas/SourceType"
              },
              "type": "array",
              "title": "Allowed Sources",
              "default": [
                "Document",
                "Google Drive",
                "OneDrive",
                "Website"
              ]
            },
            "ingestion": {
              "$ref": "#/components/schemas/IngestionSettings-Input",
              "default": {
                "batch_size": 8,
                "default_chunk_size": 1024,
                "default_chunk_overlap": 256,
                "enrich_chunks_mode": "inject_summary",
                "enrich_pre_made_qa": false,
                "methods": {
                  "application/pdf": {
                    "chunk_overlap": 256,
                    "chunk_size": 1024,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_images": true,
                    "extract_qa_pairs": false,
                    "supported_mime_types": [
                      "application/pdf",
                      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                      "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                      "application/msword",
                      "application/vnd.ms-powerpoint"
                    ],
                    "type": "pdf"
                  },
                  "default": {
                    "chunk_size": 1024,
                    "chunk_overlap": 256,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_qa_pairs": false,
                    "type": "default",
                    "supported_mime_types": [
                      "text/plain",
                      "text/html",
                      "text/markdown",
                      "application/json"
                    ]
                  },
                  "image/*": {
                    "supported_mime_types": [
                      "image/jpeg",
                      "image/png",
                      "image/bmp"
                    ],
                    "type": "image"
                  },
                  "text/html": {
                    "chunk_overlap": 256,
                    "chunk_size": 1024,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_qa_pairs": false,
                    "extract_text_only": true,
                    "include_images": false,
                    "include_tables": true,
                    "supported_mime_types": [
                      "text/html"
                    ],
                    "type": "html"
                  },
                  "text/plain": {
                    "chunk_overlap": 256,
                    "chunk_size": 1024,
                    "chunking": true,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_qa_pairs": false,
                    "preserve_formatting": true,
                    "supported_mime_types": [
                      "text/plain",
                      "text/html",
                      "text/markdown",
                      "application/json"
                    ],
                    "type": "text"
                  }
                }
              }
            },
            "retrieval": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FullTextSearchMethod"
                },
                {
                  "$ref": "#/components/schemas/SemanticSearchMethod"
                },
                {
                  "$ref": "#/components/schemas/HybridSearchMethod"
                },
                {
                  "$ref": "#/components/schemas/HybridRerankingSettings-Input"
                }
              ],
              "title": "Retrieval",
              "default": {
                "type": "hybrid_reranking",
                "hybrid_settings": {
                  "fts_weight": 0.7,
                  "full_text_search": {
                    "type": "full_text_search"
                  },
                  "semantic_search": {
                    "sets_threshold": false,
                    "threshold": 0.0,
                    "top_k": 25,
                    "type": "semantic"
                  },
                  "semantic_weight": 0.3,
                  "threshold": 0.0,
                  "type": "hybrid_relative_score"
                },
                "reranker_settings": {
                  "model_name": "semantic-ranker-512@latest",
                  "ranking_config": "default_ranking_config",
                  "sets_threshold": false,
                  "threshold": 0.0,
                  "top_k": 10,
                  "type": "vertex"
                }
              },
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "full_text_search": "#/components/schemas/FullTextSearchMethod",
                  "hybrid_relative_score": "#/components/schemas/HybridSearchMethod",
                  "hybrid_reranking": "#/components/schemas/HybridRerankingSettings-Input",
                  "semantic": "#/components/schemas/SemanticSearchMethod"
                }
              }
            },
            "embeddings": {
              "$ref": "#/components/schemas/EmbeddingsSettings",
              "default": {
                "text_model": "vertexai/text-multilingual-embedding-002",
                "mm_model": "vertexai/multimodalembedding@001"
              }
            }
          },
          "type": "object",
          "title": "KnowledgeBaseSettings"
        },
        "KnowledgeBaseSettings-Output": {
          "properties": {
            "allowed_sources": {
              "items": {
                "$ref": "#/components/schemas/SourceType"
              },
              "type": "array",
              "title": "Allowed Sources",
              "default": [
                "Document",
                "Google Drive",
                "OneDrive",
                "Website"
              ]
            },
            "ingestion": {
              "$ref": "#/components/schemas/IngestionSettings-Output",
              "default": {
                "batch_size": 8,
                "default_chunk_size": 1024,
                "default_chunk_overlap": 256,
                "enrich_chunks_mode": "inject_summary",
                "enrich_pre_made_qa": false,
                "methods": {
                  "application/pdf": {
                    "chunk_overlap": 256,
                    "chunk_size": 1024,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_images": true,
                    "extract_qa_pairs": false,
                    "supported_mime_types": [
                      "application/pdf",
                      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                      "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                      "application/msword",
                      "application/vnd.ms-powerpoint"
                    ],
                    "type": "pdf"
                  },
                  "default": {
                    "chunk_size": 1024,
                    "chunk_overlap": 256,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_qa_pairs": false,
                    "type": "default",
                    "supported_mime_types": [
                      "text/plain",
                      "text/html",
                      "text/markdown",
                      "application/json"
                    ]
                  },
                  "image/*": {
                    "supported_mime_types": [
                      "image/jpeg",
                      "image/png",
                      "image/bmp"
                    ],
                    "type": "image"
                  },
                  "text/html": {
                    "chunk_overlap": 256,
                    "chunk_size": 1024,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_qa_pairs": false,
                    "extract_text_only": true,
                    "include_images": false,
                    "include_tables": true,
                    "supported_mime_types": [
                      "text/html"
                    ],
                    "type": "html"
                  },
                  "text/plain": {
                    "chunk_overlap": 256,
                    "chunk_size": 1024,
                    "chunking": true,
                    "enrich_chunks_mode": "inject_summary",
                    "extract_qa_pairs": false,
                    "preserve_formatting": true,
                    "supported_mime_types": [
                      "text/plain",
                      "text/html",
                      "text/markdown",
                      "application/json"
                    ],
                    "type": "text"
                  }
                }
              }
            },
            "retrieval": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FullTextSearchMethod"
                },
                {
                  "$ref": "#/components/schemas/SemanticSearchMethod"
                },
                {
                  "$ref": "#/components/schemas/HybridSearchMethod"
                },
                {
                  "$ref": "#/components/schemas/HybridRerankingSettings-Output"
                }
              ],
              "title": "Retrieval",
              "default": {
                "type": "hybrid_reranking",
                "hybrid_settings": {
                  "fts_weight": 0.7,
                  "full_text_search": {
                    "type": "full_text_search"
                  },
                  "semantic_search": {
                    "sets_threshold": false,
                    "threshold": 0.0,
                    "top_k": 25,
                    "type": "semantic"
                  },
                  "semantic_weight": 0.3,
                  "threshold": 0.0,
                  "type": "hybrid_relative_score"
                },
                "reranker_settings": {
                  "model_name": "semantic-ranker-512@latest",
                  "ranking_config": "default_ranking_config",
                  "sets_threshold": false,
                  "threshold": 0.0,
                  "top_k": 10,
                  "type": "vertex"
                }
              },
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "full_text_search": "#/components/schemas/FullTextSearchMethod",
                  "hybrid_relative_score": "#/components/schemas/HybridSearchMethod",
                  "hybrid_reranking": "#/components/schemas/HybridRerankingSettings-Output",
                  "semantic": "#/components/schemas/SemanticSearchMethod"
                }
              }
            },
            "embeddings": {
              "$ref": "#/components/schemas/EmbeddingsSettings",
              "default": {
                "text_model": "vertexai/text-multilingual-embedding-002",
                "mm_model": "vertexai/multimodalembedding@001"
              }
            }
          },
          "type": "object",
          "title": "KnowledgeBaseSettings"
        },
        "KnowledgeBaseType": {
          "properties": {
            "source_type": {
              "type": "string",
              "title": "Source Type"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "image": {
              "type": "string",
              "title": "Image"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "source_type",
            "name",
            "image"
          ],
          "title": "KnowledgeBaseType"
        },
        "KnowledgeBaseV2": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "status": {
              "$ref": "#/components/schemas/TrainStatus"
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "document_types": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Document Types"
            },
            "kb_type": {
              "$ref": "#/components/schemas/KBType"
            },
            "size": {
              "type": "number",
              "title": "Size"
            },
            "num_docs": {
              "type": "integer",
              "title": "Num Docs"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "error": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            },
            "total_documents": {
              "type": "integer",
              "title": "Total Documents"
            },
            "training_documents": {
              "type": "integer",
              "title": "Training Documents"
            },
            "trained_documents": {
              "type": "integer",
              "title": "Trained Documents"
            },
            "error_documents": {
              "type": "integer",
              "title": "Error Documents"
            },
            "uploaded_documents": {
              "type": "integer",
              "title": "Uploaded Documents"
            },
            "source_types": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "$ref": "#/components/schemas/SourceType"
              },
              "type": "object",
              "title": "Source Types"
            },
            "training_source_types": {
              "items": {
                "$ref": "#/components/schemas/SourceType"
              },
              "type": "array",
              "title": "Training Source Types"
            },
            "settings_": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KnowledgeBaseSettings-Output"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "name",
            "status",
            "description",
            "document_types",
            "kb_type",
            "size",
            "num_docs",
            "created_at",
            "updated_at",
            "error",
            "total_documents",
            "training_documents",
            "trained_documents",
            "error_documents",
            "uploaded_documents",
            "source_types",
            "training_source_types"
          ],
          "title": "KnowledgeBaseV2"
        },
        "KnowledgeBaseWithDocuments": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "status": {
              "$ref": "#/components/schemas/TrainStatus"
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "document_types": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Document Types"
            },
            "kb_type": {
              "$ref": "#/components/schemas/KBType"
            },
            "size": {
              "type": "number",
              "title": "Size"
            },
            "num_docs": {
              "type": "integer",
              "title": "Num Docs"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "error": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            },
            "total_documents": {
              "type": "integer",
              "title": "Total Documents"
            },
            "training_documents": {
              "type": "integer",
              "title": "Training Documents"
            },
            "trained_documents": {
              "type": "integer",
              "title": "Trained Documents"
            },
            "error_documents": {
              "type": "integer",
              "title": "Error Documents"
            },
            "uploaded_documents": {
              "type": "integer",
              "title": "Uploaded Documents"
            },
            "source_types": {
              "additionalProperties": {
                "type": "integer"
              },
              "propertyNames": {
                "$ref": "#/components/schemas/SourceType"
              },
              "type": "object",
              "title": "Source Types"
            },
            "training_source_types": {
              "items": {
                "$ref": "#/components/schemas/SourceType"
              },
              "type": "array",
              "title": "Training Source Types"
            },
            "settings_": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KnowledgeBaseSettings-Output"
                },
                {
                  "type": "null"
                }
              ]
            },
            "documents": {
              "items": {
                "$ref": "#/components/schemas/KnowledgeBaseDocument"
              },
              "type": "array",
              "title": "Documents",
              "default": []
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "name",
            "status",
            "description",
            "document_types",
            "kb_type",
            "size",
            "num_docs",
            "created_at",
            "updated_at",
            "error",
            "total_documents",
            "training_documents",
            "trained_documents",
            "error_documents",
            "uploaded_documents",
            "source_types",
            "training_source_types"
          ],
          "title": "KnowledgeBaseWithDocuments"
        },
        "MarkdownMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole"
            },
            "type": {
              "type": "string",
              "const": "markdown",
              "title": "Type",
              "default": "markdown"
            },
            "content": {
              "type": "string",
              "title": "Content",
              "default": ""
            }
          },
          "type": "object",
          "required": [
            "role"
          ],
          "title": "MarkdownMessage"
        },
        "Message": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "message_parts": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ToolCallMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ToolCalledMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ToolCalledMessageEnd"
                  },
                  {
                    "$ref": "#/components/schemas/MessageEnd"
                  },
                  {
                    "$ref": "#/components/schemas/MarkdownMessage"
                  },
                  {
                    "$ref": "#/components/schemas/AudioReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ImageReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/VideoReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/DocumentReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/WebReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/SourceReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/SystemMessage"
                  },
                  {
                    "$ref": "#/components/schemas/ErrorMessage"
                  },
                  {
                    "$ref": "#/components/schemas/WarningMessage"
                  },
                  {
                    "$ref": "#/components/schemas/InfoMessage"
                  },
                  {
                    "$ref": "#/components/schemas/SuccessMessage"
                  },
                  {
                    "$ref": "#/components/schemas/SetConversationTitle"
                  },
                  {
                    "$ref": "#/components/schemas/InternalToolResultMessage"
                  },
                  {
                    "$ref": "#/components/schemas/YoutubeReferenceMessage"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "audio": "#/components/schemas/AudioReferenceMessage",
                    "document": "#/components/schemas/DocumentReferenceMessage",
                    "error": "#/components/schemas/ErrorMessage",
                    "image": "#/components/schemas/ImageReferenceMessage",
                    "info": "#/components/schemas/InfoMessage",
                    "markdown": "#/components/schemas/MarkdownMessage",
                    "message_end": "#/components/schemas/MessageEnd",
                    "set_conversation_title": "#/components/schemas/SetConversationTitle",
                    "source_reference": "#/components/schemas/SourceReferenceMessage",
                    "success": "#/components/schemas/SuccessMessage",
                    "system": "#/components/schemas/SystemMessage",
                    "tool_call": "#/components/schemas/ToolCallMessage",
                    "tool_called": "#/components/schemas/ToolCalledMessage",
                    "tool_called_end": "#/components/schemas/ToolCalledMessageEnd",
                    "tool_result": "#/components/schemas/InternalToolResultMessage",
                    "user": "#/components/schemas/UserMessage",
                    "video": "#/components/schemas/VideoReferenceMessage",
                    "warning": "#/components/schemas/WarningMessage",
                    "web_reference": "#/components/schemas/WebReferenceMessage",
                    "youtube_reference": "#/components/schemas/YoutubeReferenceMessage"
                  }
                }
              },
              "type": "array",
              "title": "Message Parts"
            }
          },
          "type": "object",
          "required": [
            "id",
            "created_at",
            "message_parts"
          ],
          "title": "Message"
        },
        "MessageEnd": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "type": {
              "type": "string",
              "const": "message_end",
              "title": "Type",
              "default": "message_end"
            },
            "content": {
              "type": "string",
              "title": "Content",
              "default": ""
            }
          },
          "type": "object",
          "title": "MessageEnd"
        },
        "MessageRole": {
          "type": "string",
          "enum": [
            "system",
            "user",
            "assistant",
            "function",
            "noxus"
          ],
          "title": "MessageRole"
        },
        "NodeProgress": {
          "properties": {
            "current_it": {
              "type": "integer",
              "title": "Current It"
            },
            "total_it": {
              "type": "integer",
              "title": "Total It"
            },
            "status": {
              "$ref": "#/components/schemas/NodeStatus"
            },
            "warnings": {
              "items": {
                "$ref": "#/components/schemas/SpotWarning"
              },
              "type": "array",
              "title": "Warnings",
              "default": []
            },
            "progress": {
              "type": "number",
              "title": "Progress",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "current_it",
            "total_it",
            "status",
            "progress"
          ],
          "title": "NodeProgress"
        },
        "NodeStatus": {
          "type": "string",
          "enum": [
            "running",
            "errored",
            "succeeded",
            "skipped"
          ],
          "title": "NodeStatus"
        },
        "NoxusQaSettings": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Noxus Q&A"
            },
            "description": {
              "type": "string",
              "title": "Description",
              "default": "Answer questions about the Noxus platform"
            },
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "default": true
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions"
            },
            "type": {
              "type": "string",
              "const": "noxus_qa",
              "title": "Type",
              "default": "noxus_qa"
            }
          },
          "type": "object",
          "title": "NoxusQaSettings"
        },
        "OCRSettings": {
          "properties": {
            "confidence_threshold": {
              "type": "number",
              "title": "Confidence Threshold",
              "default": 0.7
            },
            "language": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Language"
            }
          },
          "type": "object",
          "title": "OCRSettings"
        },
        "OneDriveFile": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "mime_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Mime Type"
            },
            "image": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Image"
            },
            "url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Url"
            },
            "drive_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Drive Id"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "title": "OneDriveFile"
        },
        "OneDriveSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "const": "OneDrive",
              "title": "Source Type",
              "default": "OneDrive"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config_cls": {
              "title": "Config Cls"
            },
            "config": {
              "$ref": "#/components/schemas/OneDriveSourceConfig"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration",
              "default": "onedrive"
            },
            "image": {
              "type": "string",
              "title": "Image",
              "default": "https://storage.googleapis.com/image-storage-spot-manual/logos/onedrive.png"
            },
            "name": {
              "type": "string",
              "title": "Name",
              "default": "OneDrive"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "OneDriveSource"
        },
        "OneDriveSourceConfig": {
          "properties": {
            "text_display_1": {
              "type": "string",
              "title": "Text Display 1",
              "default": "",
              "display": {
                "col_span": 12,
                "is_disabled": false,
                "is_subconfig": false,
                "label": "",
                "text": "",
                "title": "Select files to add to knowledge base",
                "type": "ui_text_display"
              }
            },
            "files": {
              "items": {
                "$ref": "#/components/schemas/OneDriveFile"
              },
              "type": "array",
              "title": "Files",
              "description": "Document to read",
              "display": {
                "col_span": 12,
                "file_type": "folder",
                "is_disabled": false,
                "is_subconfig": false,
                "label": "",
                "multi_select": true,
                "name": "OneDrive",
                "set_include_folders": true,
                "type": "onedrive_picker"
              },
              "placeholder": [
                {
                  "id": "123",
                  "image": "123",
                  "name": "123"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "files"
          ],
          "title": "OneDriveSourceConfig"
        },
        "PDFIngestionMethod": {
          "properties": {
            "chunk_size": {
              "type": "integer",
              "title": "Chunk Size",
              "default": 1024
            },
            "chunk_overlap": {
              "type": "integer",
              "title": "Chunk Overlap",
              "default": 256
            },
            "enrich_chunks_mode": {
              "type": "string",
              "enum": [
                "inject_summary",
                "contextual"
              ],
              "title": "Enrich Chunks Mode",
              "default": "inject_summary"
            },
            "extract_qa_pairs": {
              "type": "boolean",
              "title": "Extract Qa Pairs",
              "default": false
            },
            "type": {
              "type": "string",
              "const": "pdf",
              "title": "Type",
              "default": "pdf"
            },
            "supported_mime_types": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Supported Mime Types",
              "default": [
                "application/pdf",
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                "application/msword",
                "application/vnd.ms-powerpoint"
              ]
            },
            "ocr_settings": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OCRSettings"
                },
                {
                  "type": "null"
                }
              ]
            },
            "extract_images": {
              "type": "boolean",
              "title": "Extract Images",
              "default": true
            }
          },
          "type": "object",
          "title": "PDFIngestionMethod"
        },
        "Page_Assistant_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/Assistant"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Total"
            },
            "page": {
              "type": "integer",
              "minimum": 1.0,
              "title": "Page"
            },
            "size": {
              "type": "integer",
              "minimum": 1.0,
              "title": "Size"
            },
            "pages": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size",
            "pages"
          ],
          "title": "Page[Assistant]"
        },
        "Page_Conversation_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/Conversation"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Total"
            },
            "page": {
              "type": "integer",
              "minimum": 1.0,
              "title": "Page"
            },
            "size": {
              "type": "integer",
              "minimum": 1.0,
              "title": "Size"
            },
            "pages": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size",
            "pages"
          ],
          "title": "Page[Conversation]"
        },
        "Page_KnowledgeBaseDocument_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/KnowledgeBaseDocument"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total"
            },
            "page": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size"
          ],
          "title": "Page[KnowledgeBaseDocument]"
        },
        "Page_KnowledgeBaseV2_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/KnowledgeBaseV2"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total"
            },
            "page": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size"
          ],
          "title": "Page[KnowledgeBaseV2]"
        },
        "Page_RunNoIO_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/RunNoIO"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total"
            },
            "page": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size"
          ],
          "title": "Page[RunNoIO]"
        },
        "Page_RunWithSearchData_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/RunWithSearchData"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total"
            },
            "page": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size"
          ],
          "title": "Page[RunWithSearchData]"
        },
        "Page_SimplifiedRun_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/SimplifiedRun"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total"
            },
            "page": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            },
            "pages": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size"
          ],
          "title": "Page[SimplifiedRun]"
        },
        "Page_WorkflowWithTriggers_": {
          "properties": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/WorkflowWithTriggers"
              },
              "type": "array",
              "title": "Items"
            },
            "total": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Total"
            },
            "page": {
              "type": "integer",
              "minimum": 1.0,
              "title": "Page"
            },
            "size": {
              "type": "integer",
              "minimum": 1.0,
              "title": "Size"
            },
            "pages": {
              "type": "integer",
              "minimum": 0.0,
              "title": "Pages"
            }
          },
          "type": "object",
          "required": [
            "items",
            "total",
            "page",
            "size",
            "pages"
          ],
          "title": "Page[WorkflowWithTriggers]"
        },
        "Run": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "workflow_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            },
            "input": {
              "type": "object",
              "title": "Input"
            },
            "output": {
              "type": "object",
              "title": "Output"
            },
            "node_ids": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Ids"
            },
            "workflow_definition": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Definition"
            },
            "status": {
              "$ref": "#/components/schemas/RunStatus"
            },
            "progress": {
              "type": "integer",
              "title": "Progress",
              "default": 0
            },
            "progress_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowProgress"
                },
                {
                  "type": "null"
                }
              ]
            },
            "definitions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Definitions"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "finished_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Finished At"
            },
            "workflow": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Workflow"
                },
                {
                  "type": "null"
                }
              ]
            },
            "source": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            },
            "meta": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Meta"
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "workflow_id",
            "input",
            "output",
            "status",
            "created_at"
          ],
          "title": "Run"
        },
        "RunData": {
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "structured_data": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Structured Data"
            }
          },
          "type": "object",
          "required": [
            "created_at"
          ],
          "title": "RunData"
        },
        "RunNoIO": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "workflow_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            },
            "input": {
              "type": "object",
              "title": "Input"
            },
            "node_ids": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Ids"
            },
            "status": {
              "$ref": "#/components/schemas/RunStatus"
            },
            "progress": {
              "type": "integer",
              "title": "Progress",
              "default": 0
            },
            "definitions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Definitions"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "finished_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Finished At"
            },
            "workflow": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Workflow"
                },
                {
                  "type": "null"
                }
              ]
            },
            "source": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "workflow_id",
            "input",
            "status",
            "created_at"
          ],
          "title": "RunNoIO"
        },
        "RunOutput": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "output": {
              "type": "object",
              "title": "Output"
            }
          },
          "type": "object",
          "required": [
            "id",
            "output"
          ],
          "title": "RunOutput"
        },
        "RunOutputWithStatus": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "output": {
              "type": "object",
              "title": "Output"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/RunStatus"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Status"
            }
          },
          "type": "object",
          "required": [
            "id",
            "output",
            "status"
          ],
          "title": "RunOutputWithStatus"
        },
        "RunStatus": {
          "type": "string",
          "enum": [
            "queued",
            "running",
            "failed",
            "completed",
            "stopped"
          ],
          "title": "RunStatus"
        },
        "RunWithSearchData": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "workflow_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            },
            "input": {
              "type": "object",
              "title": "Input"
            },
            "output": {
              "type": "object",
              "title": "Output"
            },
            "node_ids": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Ids"
            },
            "workflow_definition": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Definition"
            },
            "status": {
              "$ref": "#/components/schemas/RunStatus"
            },
            "progress": {
              "type": "integer",
              "title": "Progress",
              "default": 0
            },
            "progress_details": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowProgress"
                },
                {
                  "type": "null"
                }
              ]
            },
            "definitions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Definitions"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "finished_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Finished At"
            },
            "workflow": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Workflow"
                },
                {
                  "type": "null"
                }
              ]
            },
            "source": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            },
            "meta": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Meta"
            },
            "search_data": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Data"
            },
            "similarity": {
              "type": "number",
              "title": "Similarity",
              "default": 0.0
            },
            "matches": {
              "items": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "type": "array",
              "title": "Matches",
              "default": []
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "workflow_id",
            "input",
            "output",
            "status",
            "created_at"
          ],
          "title": "RunWithSearchData"
        },
        "SearchRunRequest": {
          "properties": {
            "query": {
              "type": "string",
              "title": "Query"
            },
            "similarity_threshold": {
              "type": "number",
              "title": "Similarity Threshold",
              "default": 0.0
            },
            "limit": {
              "type": "integer",
              "maximum": 100.0,
              "minimum": 1.0,
              "title": "Limit",
              "default": 10
            },
            "offset": {
              "type": "integer",
              "title": "Offset",
              "default": 0
            },
            "context_size": {
              "type": "integer",
              "title": "Context Size",
              "default": 30
            },
            "max_matches_per_run": {
              "type": "integer",
              "title": "Max Matches Per Run",
              "default": 5
            }
          },
          "type": "object",
          "required": [
            "query"
          ],
          "title": "SearchRunRequest"
        },
        "SemanticSearchMethod": {
          "properties": {
            "type": {
              "type": "string",
              "const": "semantic",
              "title": "Type",
              "default": "semantic"
            },
            "sets_threshold": {
              "type": "boolean",
              "title": "Sets Threshold",
              "default": false
            },
            "threshold": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "title": "Threshold",
              "default": 0.0
            },
            "top_k": {
              "type": "integer",
              "maximum": 100.0,
              "minimum": 1.0,
              "title": "Top K",
              "default": 25
            }
          },
          "type": "object",
          "title": "SemanticSearchMethod"
        },
        "SetConversationTitle": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "type": {
              "type": "string",
              "const": "set_conversation_title",
              "title": "Type",
              "default": "set_conversation_title"
            },
            "content": {
              "type": "string",
              "title": "Content"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "SetConversationTitle"
        },
        "SharepointSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "const": "Sharepoint",
              "title": "Source Type",
              "default": "Sharepoint"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config_cls": {
              "title": "Config Cls"
            },
            "config": {
              "$ref": "#/components/schemas/SharepointSourceConfig"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration",
              "default": "sharepoint"
            },
            "image": {
              "type": "string",
              "title": "Image",
              "default": "https://storage.googleapis.com/image-storage-spot-manual/logos/sharepoint.png"
            },
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Sharepoint"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "SharepointSource"
        },
        "SharepointSourceConfig": {
          "properties": {
            "text_display_1": {
              "type": "string",
              "title": "Text Display 1",
              "default": "",
              "display": {
                "col_span": 12,
                "is_disabled": false,
                "is_subconfig": false,
                "label": "",
                "text": "",
                "title": "Select files to add to knowledge base",
                "type": "ui_text_display"
              }
            },
            "files": {
              "items": {
                "$ref": "#/components/schemas/OneDriveFile"
              },
              "type": "array",
              "title": "Files",
              "description": "Document to read",
              "display": {
                "col_span": 12,
                "file_type": "folder",
                "is_disabled": false,
                "is_subconfig": false,
                "label": "",
                "multi_select": true,
                "name": "Sharepoint",
                "set_include_folders": true,
                "type": "onedrive_picker"
              },
              "placeholder": [
                {
                  "id": "123",
                  "image": "123",
                  "name": "123"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "files"
          ],
          "title": "SharepointSourceConfig"
        },
        "SimplifiedRun": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "workflow_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            },
            "input": {
              "type": "object",
              "title": "Input"
            },
            "output": {
              "type": "object",
              "title": "Output"
            },
            "node_ids": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Ids"
            },
            "workflow_definition": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Definition"
            },
            "status": {
              "$ref": "#/components/schemas/RunStatus"
            },
            "progress": {
              "type": "integer",
              "title": "Progress",
              "default": 0
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "finished_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Finished At"
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "workflow_id",
            "input",
            "output",
            "status",
            "created_at"
          ],
          "title": "SimplifiedRun"
        },
        "Source": {
          "properties": {
            "source": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DocumentSource"
                },
                {
                  "$ref": "#/components/schemas/GoogleDriveSource"
                },
                {
                  "$ref": "#/components/schemas/OneDriveSource"
                },
                {
                  "$ref": "#/components/schemas/SharepointSource"
                },
                {
                  "$ref": "#/components/schemas/WebsiteSource"
                },
                {
                  "$ref": "#/components/schemas/CustomSource"
                }
              ],
              "title": "Source",
              "discriminator": {
                "propertyName": "source_type",
                "mapping": {
                  "Custom": "#/components/schemas/CustomSource",
                  "Document": "#/components/schemas/DocumentSource",
                  "Google Drive": "#/components/schemas/GoogleDriveSource",
                  "OneDrive": "#/components/schemas/OneDriveSource",
                  "Sharepoint": "#/components/schemas/SharepointSource",
                  "Website": "#/components/schemas/WebsiteSource"
                }
              }
            }
          },
          "type": "object",
          "required": [
            "source"
          ],
          "title": "Source"
        },
        "SourceReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "type": {
              "type": "string",
              "const": "source_reference",
              "title": "Type",
              "default": "source_reference"
            },
            "references": {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/DocumentReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/WebReferenceMessage"
                  },
                  {
                    "$ref": "#/components/schemas/YoutubeReferenceMessage"
                  }
                ]
              },
              "type": "array",
              "title": "References"
            }
          },
          "type": "object",
          "required": [
            "references"
          ],
          "title": "SourceReferenceMessage"
        },
        "SourceType": {
          "type": "string",
          "enum": [
            "Document",
            "Google Drive",
            "Notion",
            "Website",
            "OneDrive",
            "Slack",
            "Linear",
            "Github",
            "Teams",
            "Sharepoint",
            "Custom"
          ],
          "title": "SourceType"
        },
        "SpotWarning": {
          "properties": {
            "detail": {
              "type": "string",
              "title": "Detail"
            },
            "identifier": {
              "$ref": "#/components/schemas/WarningIdentifier"
            },
            "node_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Id"
            },
            "params": {
              "type": "object",
              "title": "Params",
              "default": {}
            },
            "markdown": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Markdown"
            },
            "snippet": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Snippet"
            }
          },
          "type": "object",
          "required": [
            "detail",
            "identifier"
          ],
          "title": "SpotWarning"
        },
        "Status": {
          "properties": {
            "success": {
              "type": "boolean",
              "title": "Success"
            }
          },
          "type": "object",
          "required": [
            "success"
          ],
          "title": "Status"
        },
        "SuccessMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "content": {
              "type": "string",
              "title": "Content"
            },
            "show_to_user": {
              "type": "boolean",
              "title": "Show To User",
              "default": true
            },
            "type": {
              "type": "string",
              "const": "success",
              "title": "Type",
              "default": "success"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "SuccessMessage"
        },
        "SystemMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "system"
            },
            "type": {
              "type": "string",
              "const": "system",
              "title": "Type",
              "default": "system"
            },
            "content": {
              "type": "string",
              "title": "Content",
              "default": ""
            }
          },
          "type": "object",
          "title": "SystemMessage"
        },
        "TextIngestionMethod": {
          "properties": {
            "chunk_size": {
              "type": "integer",
              "title": "Chunk Size",
              "default": 1024
            },
            "chunk_overlap": {
              "type": "integer",
              "title": "Chunk Overlap",
              "default": 256
            },
            "enrich_chunks_mode": {
              "type": "string",
              "enum": [
                "inject_summary",
                "contextual"
              ],
              "title": "Enrich Chunks Mode",
              "default": "inject_summary"
            },
            "extract_qa_pairs": {
              "type": "boolean",
              "title": "Extract Qa Pairs",
              "default": false
            },
            "type": {
              "type": "string",
              "const": "text",
              "title": "Type",
              "default": "text"
            },
            "chunking": {
              "type": "boolean",
              "title": "Chunking",
              "default": true
            },
            "preserve_formatting": {
              "type": "boolean",
              "title": "Preserve Formatting",
              "default": true
            },
            "supported_mime_types": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Supported Mime Types",
              "default": [
                "text/plain",
                "text/html",
                "text/markdown",
                "application/json"
              ]
            }
          },
          "type": "object",
          "title": "TextIngestionMethod"
        },
        "ToolCallMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "function"
            },
            "tool_type": {
              "type": "string",
              "enum": [
                "kb_qa",
                "web_research",
                "workflow",
                "list_workflows",
                "run_integration",
                "noxus_qa"
              ],
              "title": "Tool Type"
            },
            "type": {
              "type": "string",
              "const": "tool_call",
              "title": "Type",
              "default": "tool_call"
            },
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "function_call": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FunctionCallData"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "tool_type"
          ],
          "title": "ToolCallMessage"
        },
        "ToolCalledMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "function"
            },
            "tool_type": {
              "type": "string",
              "enum": [
                "kb_qa",
                "web_research",
                "workflow",
                "list_workflows",
                "run_integration",
                "noxus_qa"
              ],
              "title": "Tool Type"
            },
            "type": {
              "type": "string",
              "const": "tool_called",
              "title": "Type",
              "default": "tool_called"
            },
            "content": {
              "type": "string",
              "title": "Content"
            }
          },
          "type": "object",
          "required": [
            "tool_type",
            "content"
          ],
          "title": "ToolCalledMessage"
        },
        "ToolCalledMessageEnd": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "function"
            },
            "tool_type": {
              "type": "string",
              "enum": [
                "kb_qa",
                "web_research",
                "workflow",
                "list_workflows",
                "run_integration",
                "noxus_qa"
              ],
              "title": "Tool Type"
            },
            "type": {
              "type": "string",
              "const": "tool_called_end",
              "title": "Type",
              "default": "tool_called_end"
            },
            "function_call": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FunctionCallData"
                },
                {
                  "type": "null"
                }
              ]
            },
            "content": {
              "type": "string",
              "title": "Content"
            }
          },
          "type": "object",
          "required": [
            "tool_type",
            "content"
          ],
          "title": "ToolCalledMessageEnd"
        },
        "TrainStatus": {
          "type": "string",
          "enum": [
            "created",
            "trained",
            "training",
            "error"
          ],
          "title": "TrainStatus"
        },
        "Trigger": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "workflow_id": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            },
            "definition": {
              "type": "object",
              "title": "Definition"
            },
            "routing_key": {
              "type": "string",
              "title": "Routing Key"
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "workflow_id",
            "definition",
            "routing_key"
          ],
          "title": "Trigger"
        },
        "Unset": {
          "properties": {},
          "type": "object",
          "title": "Unset"
        },
        "UpdateAssistant": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "definition": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConversationSettings-Input"
                },
                {
                  "type": "null"
                }
              ]
            },
            "visible": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Visible"
            }
          },
          "type": "object",
          "title": "UpdateAssistant"
        },
        "UpdateDocument": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "summary": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Summary"
            },
            "short_summary": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Short Summary"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DocumentStatus"
                },
                {
                  "type": "null"
                }
              ]
            },
            "doc_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Type"
            },
            "error": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            },
            "prefix": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            },
            "file_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            }
          },
          "type": "object",
          "title": "UpdateDocument"
        },
        "UpdateKnowledgeBase": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TrainStatus"
                },
                {
                  "type": "null"
                }
              ]
            },
            "document_types": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Document Types"
            },
            "kb_type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KBType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "error": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            },
            "summary": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Summary"
            },
            "summary_embedding": {
              "anyOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Summary Embedding"
            },
            "needs_summary_update": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Needs Summary Update"
            },
            "settings_": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KnowledgeBaseSettings-Input"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "title": "UpdateKnowledgeBase"
        },
        "UpdateWorkflowRequest": {
          "properties": {
            "name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "type": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowType"
                },
                {
                  "type": "null"
                }
              ]
            },
            "saved": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Saved"
            },
            "definition": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Definition"
            },
            "error_handler": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "$ref": "#/components/schemas/Unset"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Handler",
              "default": {}
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowMeta"
                },
                {
                  "type": "null"
                }
              ]
            },
            "workflow_hash": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Hash"
            }
          },
          "type": "object",
          "title": "UpdateWorkflowRequest"
        },
        "UserMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "user"
            },
            "type": {
              "type": "string",
              "const": "user",
              "title": "Type",
              "default": "user"
            },
            "content": {
              "type": "string",
              "title": "Content",
              "default": ""
            },
            "tool": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "web_research",
                    "kb_qa",
                    "noxus_qa"
                  ]
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tool"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id"
            },
            "files": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/ConversationFile"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Files"
            },
            "model_selection": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Selection"
            },
            "images": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Images"
            }
          },
          "type": "object",
          "title": "UserMessage"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        },
        "VertexRerankingOpts": {
          "properties": {
            "type": {
              "type": "string",
              "const": "vertex",
              "title": "Type",
              "default": "vertex"
            },
            "model_name": {
              "type": "string",
              "const": "semantic-ranker-512@latest",
              "title": "Model Name",
              "default": "semantic-ranker-512@latest"
            },
            "ranking_config": {
              "type": "string",
              "const": "default_ranking_config",
              "title": "Ranking Config",
              "default": "default_ranking_config"
            },
            "top_k": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 25.0,
                  "minimum": 1.0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Top K",
              "default": 10
            },
            "sets_threshold": {
              "type": "boolean",
              "title": "Sets Threshold",
              "default": false
            },
            "threshold": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "title": "Threshold",
              "default": 0.0
            }
          },
          "type": "object",
          "title": "VertexRerankingOpts"
        },
        "VideoReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "kb_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kb Id"
            },
            "doc_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Doc Id"
            },
            "file_id": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Id"
            },
            "from_timestamp": {
              "type": "string",
              "format": "duration",
              "title": "From Timestamp"
            },
            "to_timestamp": {
              "type": "string",
              "format": "duration",
              "title": "To Timestamp"
            },
            "type": {
              "type": "string",
              "const": "video",
              "title": "Type",
              "default": "video"
            }
          },
          "type": "object",
          "required": [
            "from_timestamp",
            "to_timestamp"
          ],
          "title": "VideoReferenceMessage"
        },
        "WarningIdentifier": {
          "type": "string",
          "enum": [
            "general",
            "model_fallback",
            "model_timeout",
            "reading_spreadsheet",
            "invalid_search",
            "no_results_returned",
            "integration_warning",
            "failed_scraping",
            "invalid_value",
            "continue_on_error",
            "data_ingestion",
            "document_already_exists",
            "ingestion_timeout",
            "libreoffice_conversion"
          ],
          "title": "WarningIdentifier"
        },
        "WarningMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "content": {
              "type": "string",
              "title": "Content"
            },
            "show_to_user": {
              "type": "boolean",
              "title": "Show To User",
              "default": true
            },
            "type": {
              "type": "string",
              "const": "warning",
              "title": "Type",
              "default": "warning"
            },
            "warning_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Warning Type"
            }
          },
          "type": "object",
          "required": [
            "content"
          ],
          "title": "WarningMessage"
        },
        "WebReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "type": {
              "type": "string",
              "const": "web_reference",
              "title": "Type",
              "default": "web_reference"
            },
            "quote": {
              "type": "string",
              "title": "Quote"
            },
            "title": {
              "type": "string",
              "title": "Title"
            },
            "ref_label": {
              "type": "string",
              "title": "Ref Label"
            },
            "url": {
              "type": "string",
              "title": "Url"
            },
            "image_url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Image Url"
            }
          },
          "type": "object",
          "required": [
            "quote",
            "title",
            "ref_label",
            "url"
          ],
          "title": "WebReferenceMessage"
        },
        "WebResearchSettings": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Web Research"
            },
            "description": {
              "type": "string",
              "title": "Description",
              "default": "Search the web for information"
            },
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "default": true
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions"
            },
            "type": {
              "type": "string",
              "const": "web_research",
              "title": "Type",
              "default": "web_research"
            }
          },
          "type": "object",
          "title": "WebResearchSettings"
        },
        "WebsiteSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "const": "Website",
              "title": "Source Type",
              "default": "Website"
            },
            "subtype": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subtype"
            },
            "config_cls": {
              "title": "Config Cls"
            },
            "config": {
              "$ref": "#/components/schemas/WebsiteSourceConfig"
            },
            "integration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integration"
            },
            "image": {
              "type": "string",
              "title": "Image",
              "default": "icon:Globe"
            },
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Website"
            },
            "exposed": {
              "type": "boolean",
              "title": "Exposed",
              "default": true
            }
          },
          "type": "object",
          "required": [
            "config"
          ],
          "title": "WebsiteSource"
        },
        "WebsiteSourceConfig": {
          "properties": {
            "text_display_1": {
              "type": "string",
              "title": "Text Display 1",
              "default": "",
              "display": {
                "col_span": 12,
                "is_disabled": false,
                "is_subconfig": false,
                "label": "",
                "text": "",
                "title": "Select urls to add to knowledge base",
                "type": "ui_text_display"
              }
            },
            "urls": {
              "items": {
                "$ref": "#/components/schemas/WebsiteWithDepth"
              },
              "type": "array",
              "title": "Urls",
              "description": "URL to read",
              "display": {
                "col_span": 12,
                "is_disabled": false,
                "is_subconfig": false,
                "label": "URL",
                "type": "config_scrape_website_list"
              }
            }
          },
          "type": "object",
          "required": [
            "urls"
          ],
          "title": "WebsiteSourceConfig"
        },
        "WebsiteWithDepth": {
          "properties": {
            "url": {
              "type": "string",
              "title": "Url"
            },
            "depth": {
              "type": "integer",
              "title": "Depth"
            }
          },
          "type": "object",
          "required": [
            "url",
            "depth"
          ],
          "title": "WebsiteWithDepth"
        },
        "Workflow": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/WorkflowType"
            },
            "definition": {
              "type": "object",
              "title": "Definition"
            },
            "workflow_hash": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Hash"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowMeta"
                },
                {
                  "type": "null"
                }
              ]
            },
            "last_updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Updated At"
            },
            "last_run_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Run At"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "deleted_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Deleted At"
            },
            "runs_count": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Runs Count"
            },
            "author_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "saved": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Saved"
            },
            "error_handler": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Handler"
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "name",
            "type",
            "definition"
          ],
          "title": "Workflow"
        },
        "WorkflowInfo": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "title": "WorkflowInfo"
        },
        "WorkflowMeta": {
          "properties": {
            "tags": {
              "items": {
                "$ref": "#/components/schemas/WorkflowTag"
              },
              "type": "array",
              "title": "Tags",
              "default": []
            },
            "icon": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Icon"
            }
          },
          "type": "object",
          "title": "WorkflowMeta"
        },
        "WorkflowProgress": {
          "properties": {
            "executed_nodes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Executed Nodes"
            },
            "running_nodes": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Running Nodes"
            },
            "remaining_nodes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Remaining Nodes"
            },
            "skipped_nodes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Skipped Nodes",
              "default": []
            },
            "error_handler_nodes": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Error Handler Nodes",
              "default": []
            },
            "per_node_progress": {
              "additionalProperties": {
                "$ref": "#/components/schemas/NodeProgress"
              },
              "type": "object",
              "title": "Per Node Progress"
            },
            "per_edge_progress": {
              "additionalProperties": {
                "$ref": "#/components/schemas/EdgeProgress"
              },
              "type": "object",
              "title": "Per Edge Progress",
              "default": {}
            },
            "total_progress": {
              "type": "number",
              "title": "Total Progress",
              "readOnly": true
            }
          },
          "type": "object",
          "required": [
            "executed_nodes",
            "remaining_nodes",
            "per_node_progress",
            "total_progress"
          ],
          "title": "WorkflowProgress"
        },
        "WorkflowSettings": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "default": "Workflow Runner"
            },
            "description": {
              "type": "string",
              "title": "Description",
              "default": "Run a workflow"
            },
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "default": true
            },
            "extra_instructions": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra Instructions"
            },
            "type": {
              "type": "string",
              "const": "workflow",
              "title": "Type",
              "default": "workflow"
            },
            "requires_llm_followup": {
              "type": "boolean",
              "title": "Requires Llm Followup",
              "default": false
            },
            "workflow": {
              "$ref": "#/components/schemas/WorkflowInfo"
            }
          },
          "type": "object",
          "required": [
            "workflow"
          ],
          "title": "WorkflowSettings"
        },
        "WorkflowTag": {
          "properties": {
            "value": {
              "type": "string",
              "title": "Value"
            },
            "color": {
              "type": "string",
              "title": "Color"
            }
          },
          "type": "object",
          "required": [
            "value",
            "color"
          ],
          "title": "WorkflowTag"
        },
        "WorkflowType": {
          "type": "string",
          "enum": [
            "flow",
            "handler",
            "ingestion"
          ],
          "title": "WorkflowType"
        },
        "WorkflowWithTriggers": {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            },
            "group_id": {
              "type": "string",
              "format": "uuid",
              "title": "Group Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/WorkflowType"
            },
            "definition": {
              "type": "object",
              "title": "Definition"
            },
            "workflow_hash": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workflow Hash"
            },
            "meta": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/WorkflowMeta"
                },
                {
                  "type": "null"
                }
              ]
            },
            "last_updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Updated At"
            },
            "last_run_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Run At"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "deleted_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Deleted At"
            },
            "runs_count": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Runs Count"
            },
            "author_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Name"
            },
            "description": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            },
            "saved": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Saved"
            },
            "error_handler": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error Handler"
            },
            "triggers": {
              "items": {
                "$ref": "#/components/schemas/Trigger"
              },
              "type": "array",
              "title": "Triggers",
              "default": []
            }
          },
          "type": "object",
          "required": [
            "id",
            "group_id",
            "name",
            "type",
            "definition"
          ],
          "title": "WorkflowWithTriggers"
        },
        "YoutubeReferenceMessage": {
          "properties": {
            "role": {
              "$ref": "#/components/schemas/MessageRole",
              "default": "noxus"
            },
            "type": {
              "type": "string",
              "const": "youtube_reference",
              "title": "Type",
              "default": "youtube_reference"
            },
            "url": {
              "type": "string",
              "title": "Url"
            }
          },
          "type": "object",
          "required": [
            "url"
          ],
          "title": "YoutubeReferenceMessage"
        }
      },
      "securitySchemes": {
        "APIKeyHeader": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key"
        },
        "Auth0HTTPBearer": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    }
  }